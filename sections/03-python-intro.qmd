---
title: "Python Programming on Clusters"
author: "Jeanette Clark"
---

## Learning Objectives

- Basic Python review
- Using virtual environments
- Writing in Jupyter notebooks
- Writing functions in Python

## Introduction

* VS Code + remote development on a cluster is easy and way faster than your local machine
* Jupyter is a great way to do literate analysis
* Functions provide ways to reuse your code across notebooks/projects

## Python on the cluster

* Connect to the server
* Start a `training` project and pick interpreter (this could also go in Sam's session)
* Create and execute `hello.py`
    - from the IDE as a whole
    - from IDE line by line
    - from the terminal

## Virtual Environments

Why virtual environments? We'll answer this.

First install `virtualenvwrapper`

```
pip3 install virtualenvwrapper
```

Now we will create the `.bash_profile` file to create variables that point to the install locations of python and `virtualenvwrapper`.

In VS Code, select "File > New Text File" then paste this into the file:

```
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
export VIRTUALENVWRAPPER_VIRTUAWORKON_HOME=$HOME/.virtualenvs
source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
```

Save the file in the top of your user directory as `.bash_profile`.

Restart your terminal, then check to make sure it was installed and configured correctly

```
mkvirtualenv --version
```

Now we can create the virtual environment we will use for the course

```
mkvirtualenv scomp
```

You'll see the name of the env you are working in on the left side of your terminal prompt in parentheses.

Now lets install the dependencies for this course into that environment. (Note: need to figure out how to get them this file)

```
python3 -m pip install -r requirements.txt
```

To deactivate your environment (like if you want to work on a different project), just run `deactivate`. To activate it again, run

```
workon scomp
```


## Brief overview of python syntax

* lists, arrays, dictionaries, associative arrays

## Jupyter notebooks

* Create a notebook
* Load in some libraries (pandas, numpy, scipy, matplotlib)
* Read in a csv
* group and summarize by a variable
* create a simple plot

## Functions

* create `myplot.py`
* write `myplot()` function to create the same plot we did in section above
* load myplot into jupyter notebook (`from myplot.py import myplot`)
* replace old plot method with new function
* more to come in Bryce's section

## Resources

